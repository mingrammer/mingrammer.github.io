<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mingrammer&#39;s note</title>
    <link>https://mingrammer.com/</link>
    <description>Recent content on mingrammer&#39;s note</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 01 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mingrammer.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>IDC에서 AWS로 Redis 데이터 이전하기</title>
      <link>https://mingrammer.com/redis-migration/</link>
      <pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/redis-migration/</guid>
      <description>작년 3분기 즈음에 내가 맡고 있는 두 개의 게임중 한 게임의 서버 인프라를 IDC에서 AWS로 이전해야하는 일이 생겼다. 기존 인프라 구성은 LB (Load Balancer) 뒤에 게임 서버 (웹</description>
    </item>
    
    <item>
      <title>[Go로 구현하는 블록체인] Part 7: 네트워크</title>
      <link>https://mingrammer.com/building-blockchain-in-go-part-7/</link>
      <pubDate>Mon, 18 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/building-blockchain-in-go-part-7/</guid>
      <description>Building Blockchain in Go 시리즈를 번역한 글입니다. 서론 지금까지 우리는 익명의 안전하고 무작위로 생성된 주소, 블록체인 데이터 저장소, 작업 증명 시스템, 신뢰할 수 있는 트랜잭</description>
    </item>
    
    <item>
      <title>[Go로 구현하는 블록체인] Part 6: 트랜잭션 2</title>
      <link>https://mingrammer.com/building-blockchain-in-go-part-6/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/building-blockchain-in-go-part-6/</guid>
      <description>Building Blockchain in Go 시리즈를 번역한 글입니다. 서론 시리즈 초반부에 필자는 블록체인은 분산된 데이터베이스라고 말한 적이 있다. 우리는 지금까지 &amp;ldquo;분산&amp;rd</description>
    </item>
    
    <item>
      <title>[Go로 구현하는 블록체인] Part 5: 주소</title>
      <link>https://mingrammer.com/building-blockchain-in-go-part-5/</link>
      <pubDate>Wed, 06 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/building-blockchain-in-go-part-5/</guid>
      <description>Building Blockchain in Go 시리즈를 번역한 글입니다. 서론 이전 파트에서는 트랜잭션을 구현했었다. 또한 비트코인에는 사용자 계정이 없고 개인 정보 (이름, 여권 번호 및 SSN등)</description>
    </item>
    
    <item>
      <title>[Go로 구현하는 블록체인] Part 4: 트랜잭션 1</title>
      <link>https://mingrammer.com/building-blockchain-in-go-part-4/</link>
      <pubDate>Sat, 26 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/building-blockchain-in-go-part-4/</guid>
      <description>Building Blockchain in Go 시리즈를 번역한 글입니다. 서론 트랜잭션은 비트코인의 핵심이며 블록체인의 유일한 목적은 트랜잭션을 안전하고 신뢰할 수 있는 방식으로 저장하는 것이기 때</description>
    </item>
    
    <item>
      <title>[Go로 구현하는 블록체인] Part 3: 영속성 및 CLI</title>
      <link>https://mingrammer.com/building-blockchain-in-go-part-3/</link>
      <pubDate>Tue, 22 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/building-blockchain-in-go-part-3/</guid>
      <description>Building Blockchain in Go 시리즈를 번역한 글입니다. 서론 우리는 지금까지 채굴이 가능한 작업 증명 시스템을 지닌 블록체인을 구현했다. 좀 더 완벽한 기능을 갖춘 블록체인에 가까워지</description>
    </item>
    
    <item>
      <title>[Go로 구현하는 블록체인] Part 2: 작업 증명</title>
      <link>https://mingrammer.com/building-blockchain-in-go-part-2/</link>
      <pubDate>Fri, 18 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/building-blockchain-in-go-part-2/</guid>
      <description>Building Blockchain in Go 시리즈를 번역한 글입니다. 서론 이전 파트에서 블록체인 데이터베이스의 핵심인 매우 간단한 데이터 구조를 만들어보았다. 그리고 각 블록을 이전 블록에 연결</description>
    </item>
    
    <item>
      <title>[Go로 구현하는 블록체인] Part 1: 기본 프로토타입</title>
      <link>https://mingrammer.com/building-blockchain-in-go-part-1/</link>
      <pubDate>Thu, 17 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/building-blockchain-in-go-part-1/</guid>
      <description>Building Blockchain in Go 시리즈를 번역한 글입니다. Go 블록체인 구현체 저장소: Blockchain Go 소개 블록체인은 21세기의 가장 혁명적인 기술중 하나로 현재는 성숙 단계이며 아직 완전히 실현</description>
    </item>
    
    <item>
      <title>[프로젝트 오일러] 최대 경로합 문제 (18/67)</title>
      <link>https://mingrammer.com/project-euler-maximum-path-sum/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/project-euler-maximum-path-sum/</guid>
      <description>프로젝트 오일러 18, 67번 문제 풀이 문제 18번 문제는 위와 같이 숫자로 이루어진 삼각형의 꼭대기부터 바닥까지 이어진 경로중 가장 합이 큰 경로를 구하는 문제이다. 단</description>
    </item>
    
    <item>
      <title>시간에 의존하는 코드를 위한 테스트 작성하기</title>
      <link>https://mingrammer.com/writing-unit-test-for-time-dependent-code/</link>
      <pubDate>Sun, 29 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/writing-unit-test-for-time-dependent-code/</guid>
      <description>그동안 귀찮고 번거롭다는 이유로 테스트 코드 작성을 매번 미루고 있다가 최근 들어 테스트 코드 작성에 습관을 들이고자 조금씩 테스트 코드 작성 비중을 높이고 있다. 며칠</description>
    </item>
    
    <item>
      <title>[번역] 웹 캐싱의 숨겨진 요소들</title>
      <link>https://mingrammer.com/translation-the-hidden-components-of-web-caching/</link>
      <pubDate>Sat, 07 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/translation-the-hidden-components-of-web-caching/</guid>
      <description>The hidden components of Web Caching을 번역한 글입니다. 캐싱(Caching)은 애플리케이션의 처리 속도를 높여준다. 이미 가져온 데이터나 계산된 결과값의 복사본을</description>
    </item>
    
    <item>
      <title>파이썬 curses에서 스크롤 및 페이징 기능 구현하기</title>
      <link>https://mingrammer.com/how-to-implement-the-scroll-and-paging-in-python-curses/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/how-to-implement-the-scroll-and-paging-in-python-curses/</guid>
      <description>TUI 애플리케이션을 개발하다보면 마주치는 어렵지는 않지만 다소 까다로운 문제가 하나 있는데, 바로 TUI 환경에서 화면을 동적으로 제어하는 것이다. 특히 한정된 화면에</description>
    </item>
    
    <item>
      <title>[번역] Go API에서 메모리 누수 예방하기</title>
      <link>https://mingrammer.com/translation-avoiding-memory-leak-in-golang-api/</link>
      <pubDate>Sun, 18 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/translation-avoiding-memory-leak-in-golang-api/</guid>
      <description>Avoiding Memory Leak in Golang API를 번역한 글입니다. 여러분은 Go API를 프로덕션 환경에 배포하기 전에 먼저 이 글을 읽어야합니다. 이 글은 Kurio에서의 실제 경험에 기반한</description>
    </item>
    
    <item>
      <title>Go에서 OAuth2 인증하기</title>
      <link>https://mingrammer.com/getting-started-with-oauth2-in-go/</link>
      <pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/getting-started-with-oauth2-in-go/</guid>
      <description>OAuth2란, 일종의 인증 프로토콜로써 소셜 인증을 통한 로그인 및 권한 제어를 위해 사용된다. Google, Twitter, Github 등 대부분의 소셜 인증 기능을 지닌 프로바이더들은 표준 인증</description>
    </item>
    
    <item>
      <title>맥에서 리눅스로 CGO 라이브러리 크로스 컴파일하기</title>
      <link>https://mingrammer.com/cgo-cross-compile-for-mac-for-linux/</link>
      <pubDate>Mon, 11 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/cgo-cross-compile-for-mac-for-linux/</guid>
      <description>최근에 Go 프로젝트를 macOS에서 CentOS로 크로스 컴파일 해야하는 일이 생겼다. Go는 일반적으로 컴파일에 관여하는 환경 변수 설정만으로 매우 쉽게 크로</description>
    </item>
    
    <item>
      <title>[번역] 파이썬 내부 동작 원리: 임의 정밀도의 정수 구현</title>
      <link>https://mingrammer.com/translation-cpython-internals-arbitrary-precision-integer-implementation/</link>
      <pubDate>Tue, 10 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/translation-cpython-internals-arbitrary-precision-integer-implementation/</guid>
      <description>Python internals: Arbitrary-precision integer implementation을 번역한 글입니다. 여러분은 파이썬을 사용하면서 정수의 크기에 제약이 없다는걸 알아챈 적이 있는가? 이에 대해 한 번 살펴</description>
    </item>
    
    <item>
      <title>[번역] 10가지 소프트웨어 아키텍처 패턴 요약</title>
      <link>https://mingrammer.com/translation-10-common-software-architectural-patterns-in-a-nutshell/</link>
      <pubDate>Sun, 10 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/translation-10-common-software-architectural-patterns-in-a-nutshell/</guid>
      <description>10 Common Software Architectural Patterns in a nutshell을 번역한 글입니다. 대형 엔터프라이즈 규모의 시스템들은 어떻게 설계되었는지에 대해 궁금해 한 적이 있나요? 우리는 주요 소프트</description>
    </item>
    
    <item>
      <title>PyCharm &#43; Docker로 파이썬 개발환경 셋업하기 (Dockerization)</title>
      <link>https://mingrammer.com/setup-the-python-development-environment-with-pycharm-and-docker/</link>
      <pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/setup-the-python-development-environment-with-pycharm-and-docker/</guid>
      <description>보통 파이썬 프로젝트를 시작하면 주로 virtualenv를 사용해 파이썬 환경(파이썬 버전, 패키지들을 모두 포함)을 독립적으로 분리시킨 가상 환경에서 작업</description>
    </item>
    
    <item>
      <title>파이썬의 Comprehension 소개</title>
      <link>https://mingrammer.com/introduce-comprehension-of-python/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/introduce-comprehension-of-python/</guid>
      <description>Comprehension이란 iterable한 오브젝트를 생성하기 위한 방법중 하나로 파이썬에서 사용할 수 있는 유용한 기능중 하나이다. 파이썬에는 다음</description>
    </item>
    
    <item>
      <title>[번역] 진실은 코드에 있다</title>
      <link>https://mingrammer.com/translation-the-truth-is-in-the-code/</link>
      <pubDate>Sun, 07 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/translation-the-truth-is-in-the-code/</guid>
      <description>Bertil Muth의 The truth is in the code을 번역한 글입니다. requirementsascode의 shippingapp 모델 예시 머잖아, 모든 소프트웨어 개발자는 다음과 같은 말을</description>
    </item>
    
    <item>
      <title>파이썬의 Comma(,) 사용팁</title>
      <link>https://mingrammer.com/tips-of-using-comma-in-python/</link>
      <pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/tips-of-using-comma-in-python/</guid>
      <description>파이썬에서 Comma(,)를 활용할 수 있는 몇가지 팁을 정리해보고자 한다. 아마 많은 사람들이 이미 다 알고있을 내용이기 때문에, 이 또한 파이썬 초보자들을 대상</description>
    </item>
    
    <item>
      <title>[번역] 머신러닝 속 수학</title>
      <link>https://mingrammer.com/translation-the-mathematics-of-machine-learning/</link>
      <pubDate>Mon, 24 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/translation-the-mathematics-of-machine-learning/</guid>
      <description>The Mathematics of Machine Learning을 번역한 글입니다. 지난 몇 달 간, 나는 데이터 과학의 세계로 모험하고 머신러닝 기술을 사용하여 통계적 규칙성을 조사하고 완벽한 데이터</description>
    </item>
    
    <item>
      <title>[번역] 좋은 코딩을 위한 13 가지 간단한 규칙</title>
      <link>https://mingrammer.com/translation-13-simple-rules-for-good-coding/</link>
      <pubDate>Sun, 02 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/translation-13-simple-rules-for-good-coding/</guid>
      <description>13 Simple Rules for Good Coding (from my 15 years of experience)를 번역한 글입니다. 나는 15년 이상의 경력을 가진 프로그래머이며 많은 여러 언어, 패러다임, 프레임워크를 사</description>
    </item>
    
    <item>
      <title>파이썬의 Asterisk(*) 이해하기</title>
      <link>https://mingrammer.com/understanding-the-asterisk-of-python/</link>
      <pubDate>Mon, 20 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/understanding-the-asterisk-of-python/</guid>
      <description>파이썬은 타 언어에 비해 비교적 연산자 및 연산의 종류가 풍부한 편이다. 특히 파이썬이 지원하는 많은 연산자중 하나인 Asterisk(*)는 단순히 곱셈 이상의 여</description>
    </item>
    
    <item>
      <title>파이썬에서 설정값 관리하기</title>
      <link>https://mingrammer.com/ways-to-manage-the-configuration-in-python/</link>
      <pubDate>Sun, 05 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/ways-to-manage-the-configuration-in-python/</guid>
      <description>서버를 개발하다보면 항상 마주치는 문제가 있는데 바로 설정값 (Configuration)을 어떻게 관리하느냐이다. 비단, 서버 애플리케이션 뿐만 아니라 설</description>
    </item>
    
    <item>
      <title>[번역] Go와 OOP</title>
      <link>https://mingrammer.com/translation-go-and-oop/</link>
      <pubDate>Tue, 28 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/translation-go-and-oop/</guid>
      <description>theamydance의 Go and OOP&amp;hellip; Sorta를 번역한 글입니다. 나는 2016년 7월 18일에 Go를 시작했다. 3주 후, 나는 NYC의 Women Who Go 밋업에서 처음으</description>
    </item>
    
    <item>
      <title>Python vs Go 비교 레퍼런스</title>
      <link>https://mingrammer.com/side-by-side-reference-sheet-of-python-and-go/</link>
      <pubDate>Thu, 02 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/side-by-side-reference-sheet-of-python-and-go/</guid>
      <description>Python과 Go의 비교 레퍼런스 (각기 버전은 Python 3.5+와 Go 1.7+) 각 코드 블록은 Python/Go 순서 버전 버전 확인 // Python $ python --version 3.5 // Go $ go version 1.7 실행 Hello World print(&amp;quot;Hello, World&amp;quot;) import &amp;quot;fmt&amp;quot; func main() { fmt.Println(&amp;quot;Hello, World&amp;quot;)</description>
    </item>
    
    <item>
      <title>[번역] 이터레이터와 제너레이터</title>
      <link>https://mingrammer.com/translation-iterators-vs-generators/</link>
      <pubDate>Wed, 25 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/translation-iterators-vs-generators/</guid>
      <description>Iterables vs. Iterators. vs Generators를 번역한 글입니다. 모든 이미지는 원문에서 발췌하였습니다. 나는 파이썬에서 다음과 같은 개념들간의 정확한 차이점에 대해 가끔씩</description>
    </item>
    
    <item>
      <title>첫 영문 기술 포스팅</title>
      <link>https://mingrammer.com/first-publishing-english-post/</link>
      <pubDate>Mon, 16 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/first-publishing-english-post/</guid>
      <description>작년 11월에 Python 언더스코어에 관한 글을 작성한 적이 있다. 기억하기로는 당시 반응이 꽤 좋았고, 올해부터 해보고 싶던 영어공부겸 영문 블로그 운영도 해보고 싶어 첫 영</description>
    </item>
    
    <item>
      <title>[발표] AWS 회고</title>
      <link>https://mingrammer.com/presentation-awskrug-review-first-aws-experience/</link>
      <pubDate>Fri, 13 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/presentation-awskrug-review-first-aws-experience/</guid>
      <description>지난 11일 AWS Korea User Group 강남 SE 모임에서 &amp;ldquo;AWS 회고&amp;rdquo;라는 주제로 발표를 했다. 처음 AWS를 사용해 아키텍쳐링을 해본 경험을 회고하며 부족했던점과 개선방</description>
    </item>
    
    <item>
      <title>2016년 회고</title>
      <link>https://mingrammer.com/review-2016/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/review-2016/</guid>
      <description>2016년은 내 스스로에게 조금 아쉬운게 많은 해였다. 아쉬움보단 반성이라고하는게 조금 더 정확할 것이다. 새해를 맞아 2016년의 이러한 아쉬웠던 일들과 좋았</description>
    </item>
    
    <item>
      <title>[번역] Go 둘러보기 - encoding/json 패키지</title>
      <link>https://mingrammer.com/translation-go-walkthrough-encoding-json-package/</link>
      <pubDate>Sat, 03 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/translation-go-walkthrough-encoding-json-package/</guid>
      <description>Go Walkthrough 시리즈의 Go Walkthrough: encoding/json package를 번역한 글입니다. 좋든 나쁘든, JSON은 인터넷의 인코딩이다. 이것의 공식적인 정의는 냅킨 뒷면에 쓸 수 있을 정도로 간단</description>
    </item>
    
    <item>
      <title>[번역] Go 둘러보기 - encoding 패키지</title>
      <link>https://mingrammer.com/translation-go-walkthrough-encoding-package/</link>
      <pubDate>Wed, 09 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/translation-go-walkthrough-encoding-package/</guid>
      <description>Go Walkthrough 시리즈의 Go Walkthrough: encoding package를 번역한 글입니다. 우리는 이제까지 로우(raw) 바이트 스트림과 제한된 바이트 슬라이스를 다뤄봤지만 단순히 바이트만을</description>
    </item>
    
    <item>
      <title>파이썬 언더스코어(_)에 대하여</title>
      <link>https://mingrammer.com/underscore-in-python/</link>
      <pubDate>Sat, 05 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/underscore-in-python/</guid>
      <description>파이썬에서 언더스코어(underscore, _)는 특별하다. 타 언어에서 언더스코어(_)는 단지 스네이크 표기법의 변수나 함수명을 위해서만 사용되어지</description>
    </item>
    
    <item>
      <title>[번역] Go 둘러보기 - bytes &#43; strings 패키지</title>
      <link>https://mingrammer.com/translation-go-walkthrough-bytes-strings-packages/</link>
      <pubDate>Wed, 02 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/translation-go-walkthrough-bytes-strings-packages/</guid>
      <description>Go Walkthrough 시리즈의 Go Walkthrough: bytes + strings packages를 번역한 글입니다. 우린 지난번 포스트에서 바이트 스트림을 다뤄봤는데 가끔은 제한적인 범위에서, 인메모리 바이트 슬</description>
    </item>
    
    <item>
      <title>[리뷰] DEVIEW : 쿠키런 AI 구현하기</title>
      <link>https://mingrammer.com/review-deview-cookierun-ai/</link>
      <pubDate>Wed, 26 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/review-deview-cookierun-ai/</guid>
      <description>사실 처음엔 데뷰 관련 리뷰를 딱히 작성할 생각이 없었기에 발표 사진을 하나도 찍지 않았습니다. 이 점에 대해선 양해바랍니다. 이 글에 나오는 이미지들은 모두 발표 슬라</description>
    </item>
    
    <item>
      <title>[번역] Go 둘러보기 - io 패키지</title>
      <link>https://mingrammer.com/translation-go-walkthrough-io-package/</link>
      <pubDate>Wed, 26 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/translation-go-walkthrough-io-package/</guid>
      <description>Go Walkthrough 시리즈의 Go Walkthrough: io package를 번역한 글입니다. Go는 바이트(bytes)를 사용하여 작업하기 위해 만들어진 프로그래밍 언어이다. 바이트의 리스트</description>
    </item>
    
    <item>
      <title>[번역] Go에서 애플리케이션 설계하기</title>
      <link>https://mingrammer.com/translation-structuring-applications-in-go/</link>
      <pubDate>Mon, 10 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/translation-structuring-applications-in-go/</guid>
      <description>Structuring Applications in Go을 번역한 글입니다. 개요 Go를 배울 때 가장 어려웠던 부분은 애플리케이션을 어떻게 설계하는가였다. Go 이전에, 나는 Rails 애플리케이션을 만들었었는데</description>
    </item>
    
    <item>
      <title>[번역] 비동기 파이썬</title>
      <link>https://mingrammer.com/translation-asynchronous-python/</link>
      <pubDate>Mon, 03 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/translation-asynchronous-python/</guid>
      <description>Asynchronous Python을 번역한 글입니다. 파이썬에서의 비동기 프로그래밍은 최근 점점 더 많은 인기를 끌고있다. 비동기 프로그래밍을 위한 파이썬 라이브러리는 많다. 그</description>
    </item>
    
    <item>
      <title>일일커밋 알림봇 개발기</title>
      <link>https://mingrammer.com/dev-commit-alarm-bot/</link>
      <pubDate>Tue, 13 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/dev-commit-alarm-bot/</guid>
      <description>얼마 전부터 일일코딩/일일커밋에 도전하고 있다. 일일커밋이란, 말 그대로 하루에 적어도 하나의 커밋은 하자!라는 뜻으로 매일 매일 발전해 나가겠다는 의미를 가지</description>
    </item>
    
    <item>
      <title>Welcome!</title>
      <link>https://mingrammer.com/welcome-mingrammer/</link>
      <pubDate>Sun, 04 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/welcome-mingrammer/</guid>
      <description>mingrammer의 기술 블로그 (삽질 이야기) 를 시작합니다. :)</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mingrammer.com/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mingrammer.com/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>